REM Create These Queries - limited to the items IN THE PICTURE ONLY

REM 1. Print the name of all entities in the picture.
SELECT * FROM All_Ents;

REM 2. Print the name of all attributes in the picture.
SELECT * FROM ALL_ATTS;

REM 3. Print the name of all relationships and the two entities they relate in the picture.
SELECT * FROM RELENT;

REM 4. Print the name of all relationships and the two entities they relate and the cardinality for each side of the relationship in the picture.
****I TOOK YOUR ADVICE AND STARTED WITH THE GUTS OF THE VIEW, WHY ARE THERE SO MANY DUPLICATES?****
****DISTINCT cleaned up the duplicates****
WITH START_ENT AS(SELECT r.ID,e.ENTITY STARTING, r.ACTION FROM RELATIONSHIP r, ENTITY_ATTRIBUTES e WHERE r.STARTENTITYID=e.ENTITYID),
END_ENT AS (SELECT r.ID,e.ENTITY STOP_ENT, r.ACTION from RELATIONSHIP r, ENTITY_ATTRIBUTES e WHERE r.ENDENTITYID=e.ENTITYID)
SELECT DISTINCT r.ACTION NAME,s.STARTING START_ENTITY, R.START_CARDINALITY, e.STOP_ENT STOP_ENTITY, R.END_CARDINALITY
FROM RELATIONSHIP r 
JOIN START_ENT s ON r.ID=s.ID 
JOIN END_ENT e ON r.ID=e.ID ORDER BY NAME;

SELECT
R.ACTION, 
(CASE
  WHEN R.STARTENTITYID = E.ID THEN E.NAME
  END) START_ENTITY,
R.START_CARDINALITY
(CASE
  WHEN R.ENDENTITYID = E.ID THEN E.NAME
  END) END_ENTITY,
  R.END_CARDINALITY
  FROM RELATIONSHIP R
  JOIN ALL_ENTITIES E
  ON (R.STARTENTITYID = E.ID OR R.ENDENTITY = E.ID);

REM 5. Print the name of all relationships that have a cardinality of 1-to-1 in the picture.
SELECT
ACTION
FROM RELATIONSHIP
WHERE START_CARDINALITY = '1'
AND END_CARDINALITY = '1';

REM 6. Print the name of all relationships that have a cardinality of 1-to-M in the picture.
SELECT
ACTION
FROM RELATIONSHIP
WHERE START_CARDINALITY = '1'
AND END_CARDINALITY = 'Many';

REM 7. Print the name of all relationships that have a cardinality of M-to-N in the picture.
SELECT
ACTION
FROM RELATIONSHIP
WHERE START_CARDINALITY = 'Many'
AND END_CARDINALITY = 'N';

REM 8. Print the name of all relationships that have attribute(s) as well as the name(s) of the attribute(s) in the picture.
SELECT 
R.ACTION, 
RA.ATTRIBUTE_NAME
FROM RELATIONSHIP R
JOIN RELATIONSHIP_ATTRIBUTES RA
ON R.ID = RA.RELATIONSHIP;


REM 9. Print the name of all relationships that do not have attribute(s) in the picture.
SELECT
R.ACTION
FROM RELATIONSHIP R
FULL OUTER JOIN RELATIONSHIP_ATTRIBUTES RA
ON R.ID = RA.RELATIONSHIP
WHERE RA.ATTRIBUTE_NAME IS NULL;


REM 10. Print the name of all entities that have a super-type and the name of the super-type entity in the picture.
WITH START_ENT AS(SELECT AE.ID, AE.NAME, SR.STARTENTITYID STARTING FROM SPECIALIZED_RELATIONSHIP SR, ALL_ENTITIES AE WHERE SR.STARTENTITYID=AE.ID),
END_ENT AS (SELECT AE.ID, AE.NAME, SR.ENDENTITYID ENDING FROM SPECIALIZED_RELATIONSHIP SR, ALL_ENTITIES AE WHERE SR.ENDENTITYID=AE.ID)
SELECT DISTINCT e.Name EntityName, s.Name SuperType FROM SPECIALIZED_RELATIONSHIP SR 
JOIN START_ENT s ON SR.STARTENTITYID=s.ID 
JOIN END_ENT e ON SR.ENDENTITYID=e.ID ORDER BY EntityName;


REM 11. Print the name of all entities that have sub-type(s) and the name of the sub-type entities in the picture.
WITH START_ENT AS(SELECT AE.ID, AE.NAME, SR.STARTENTITYID STARTING FROM SPECIALIZED_RELATIONSHIP SR, ALL_ENTITIES AE WHERE SR.STARTENTITYID=AE.ID),
END_ENT AS (SELECT AE.ID, AE.NAME, SR.ENDENTITYID ENDING FROM SPECIALIZED_RELATIONSHIP SR, ALL_ENTITIES AE WHERE SR.ENDENTITYID=AE.ID)
SELECT DISTINCT s.Name EntityName, e.Name SubType FROM SPECIALIZED_RELATIONSHIP SR 
JOIN START_ENT s ON SR.STARTENTITYID=s.ID 
JOIN END_ENT e ON SR.ENDENTITYID=e.ID ORDER BY EntityName;

REM 12. Print the name of each entity that has a Pkey including the name(s) of the attribute(s) that form the Pkey in the picture.
SELECT DISTINCT EA.Entity, listagg(EA.Attribute_Name, ',') within group (order by EA.ENTITY) as Keys
FROM entity_attributes EA WHERE Key_Status = 'TRUE'
Group by EA.Entity;

REM 13. Print the name of each entity that does not have a Pkey in the picture.
SELECT DISTINCT EA.Entity
FROM entity_attributes EA 
WHERE EA.ENTITYID NOT IN 
(SELECT DISTINCT EA.ENTITYID FROM ENTITY_ATTRIBUTES EA WHERE Key_Status = 'TRUE');


REM 14. Print the names of all attributes in the picture and the attribute data types.
SELECT EA.ATTRIBUTE_NAME, EA.DATA_TYPE
FROM ENTITY_ATTRIBUTES EA 
ORDER BY EA.ENTITY;

REM 15. Print the names of all derived attributes and the attributes they derive from in the picture.
SELECT EA1.ATTRIBUTE_NAME DerivedAttribute, EA.ATTRIBUTE_NAME DerivedFrom 
FROM ENTITY_ATTRIBUTES EA, ENTITY_ATTRIBUTES EA1 
WHERE EA.ID=EA1.DERIVED_PARENT_ID;

REM 16. Print the names of all attributes in the picture that have a date data type.
SELECT EA.ATTRIBUTE_NAME
FROM ENTITY_ATTRIBUTES EA 
WHERE EA.DATA_TYPE = 'date';

REM 17. Print entity Employee's attributes names in the picture.
SELECT EA.ATTRIBUTE_NAME
FROM ENTITY_ATTRIBUTES EA 
WHERE EA.ENTITY = 'Employee';


REM 18. Print relationship Builds attributes names in the picture.
SELECT RA.ATTRIBUTE_NAME
FROM RELATIONSHIP_ATTRIBUTES RA, RELATIONSHIP R
WHERE RA.RelationshipID = R.ID AND R.Action = 'Builds';


REM 19. Print the names of all entities that are directly related to entity TempHourly (directly means via only one relationship) in the picture.


REM 20. Print the names of all entities that are indirectly related to the entity TempHourly (related via two relationships) in the picture.


REM 21. Print the names of attributes for entities Store and Region (just the attribute names) in the picture.
SELECT EA.ATTRIBUTE_NAME
FROM ENTITY_ATTRIBUTES EA 
WHERE EA.ENTITY IN ('Store','Region');

REM 22. Print the names of all entities that are participating in any relationship that Product participates in in the picture.
SELECT AE.NAME FROM ALL_ENTITIES AE 
WHERE AE.ID IN (
SELECT R.startentityid EntityID
FROM RELATIONSHIP R
WHERE R.ENDENTITYID in (SELECT AE.ID FROM ALL_ENTITIES AE WHERE AE.NAME = 'Product')
UNION
SELECT R.endentityid EntityID
FROM RELATIONSHIP R
WHERE R.STARTENTITYID in (SELECT AE.ID FROM ALL_ENTITIES AE WHERE AE.NAME = 'Product'));


REM 23. Print the name of all sub-types of entity Employee in the picture.
SELECT AE.NAME 
FROM All_Entities AE, Specialized_Relationship SR
WHERE AE.ID = SR.ENDENTITYID AND SR.STARTENTITYID IN (SELECT AE.ID FROM All_Entities AE WHERE AE.Name = 'Employee');

REM 24. Print the name of all entities that have exactly three attributes in the picture.
SELECT *
FROM 
(SELECT
COUNT(A.ID) NUMBER_ATTRIBUTES,
E.NAME
FROM ALL_ENTITIES E
JOIN ENTITY_ATTRIBUTES A
ON E.ID = A.ENTITYID
GROUP BY E.NAME)
WHERE NUMBER_ATTRIBUTES = '3';

REM 25. Print the name of all composite attributes and the attributes they contain in the picture.
REM Comma delimited list
SELECT EA.ATTRIBUTE_NAME CompositeAttribute, listagg(EA1.Attribute_Name, ',') within group (order by EA1.Attribute_Name) as ContainedAttributes 
FROM ENTITY_ATTRIBUTES EA, ENTITY_ATTRIBUTES EA1 WHERE EA.ID=EA1.COMPOSITE_PARENT_ID
GROUP BY EA.ATTRIBUTE_NAME;

REM One row for each contained attribute
SELECT EA.ATTRIBUTE_NAME CompositeAttribute, EA1.ATTRIBUTE_NAME ContainedAttributes FROM ENTITY_ATTRIBUTES EA, ENTITY_ATTRIBUTES EA1 WHERE EA.ID=EA1.COMPOSITE_PARENT_ID;